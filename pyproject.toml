[tool.poetry]
name = "app"
version = "0.1.0"
description = "System that allows users to reserve movie tickets"
authors = ["rsolanodev <rubensoljim@gmail.com>"]

[tool.poetry.dependencies]
python = "^3.11"
uvicorn = {extras = ["standard"], version = "^0.24.0.post1"}
fastapi = "^0.112.1"
python-multipart = "^0.0.7"
email-validator = "^2.2.0"
passlib = {extras = ["bcrypt"], version = "^1.7.4"}
tenacity = "^8.2.3"
pydantic = "^2.8.2"
gunicorn = "^22.0.0"
jinja2 = "^3.1.4"
alembic = "^1.12.1"
httpx = "^0.25.1"
psycopg = {extras = ["binary"], version = "^3.1.13"}
sqlmodel = "^0.0.21"
bcrypt = "^4.2.1"
pydantic-settings = "^2.4.0"
pyjwt = "^2.8.0"
pillow = "^10.4.0"
sqlalchemy-utils = "^0.41.2"
apscheduler = "^3.11.0"
stripe = "^11.4.1"
boto3 = "^1.36.2"
pika = "^1.3.2"

[tool.poetry.group.dev.dependencies]
pytest = "^8.3.2"
pytest-sugar = "^1.0.0"
pytest-xdist = "^3.6.1"
mypy = "^1.11.2"
ruff = "^0.6.1"
pre-commit = "^3.6.2"
types-passlib = "^1.7.7.20240106"
freezegun = "^1.5.1"
types-sqlalchemy-utils = "^1.1.0"
pytest-mock = "^3.14.0"
types-pika = "^1.2.0b1"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.mypy]
strict = true
exclude = ["venv", ".venv", "alembic"]

[[tool.mypy.overrides]]
module = ["boto3", "apscheduler.*"]
ignore_missing_imports = true

[tool.ruff]
target-version = "py310"
line-length = 120
exclude = ["alembic"]

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4",  # flake8-comprehensions
    "UP",  # pyupgrade
    "ARG001", # unused arguments in functions
]
ignore = [
    "E501",  # line too long, handled by black
    "B008",  # do not perform function calls in argument defaults
    "W191",  # indentation contains tabs
    "B904",  # Allow raising exceptions without from e, for HTTPException
]

[tool.ruff.lint.pyupgrade]
# Preserve types, even if a file imports `from __future__ import annotations`.
keep-runtime-typing = true

[tool.pytest.ini_options]
filterwarnings = [
    "ignore::DeprecationWarning:passlib.utils"
]
markers = [
    "integration: mark test as integration"
]

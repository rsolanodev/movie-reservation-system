name: CI

on:
  pull_request:
    branches: ["master"]

  push:
    branches: ["master"]

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python -

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Check mypy
        run: poetry run mypy app

      - name: Check Ruff
        run: poetry run ruff check app

      - name: Check Ruff format
        run: poetry run ruff format app --check

  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python -

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Create .env file
        run: |
          cat << EOF > .env
          DOMAIN=localhost
          ENVIRONMENT=ci
          PROJECT_NAME="Movie Reservation System"
          STACK_NAME=movie-system-reservation
          BACKEND_CORS_ORIGINS=localhost
          SECRET_KEY=secretkey
          SMTP_HOST=
          SMTP_USER=
          SMTP_PASSWORD=
          EMAILS_FROM_EMAIL=info@example.com
          SMTP_TLS=True
          SMTP_SSL=False
          SMTP_PORT=587
          POSTGRES_SERVER=localhost
          POSTGRES_PORT=5432
          POSTGRES_DB=app
          POSTGRES_USER=postgres
          POSTGRES_PASSWORD=passw0rd
          EOF

      - name: Run the Stack
        run: docker compose up -d db

      - name: Migrate Database
        run: docker compose exec backend alembic upgrade head

      - name: Run Pytest
        run: docker compose exec backend poetry run pytest
        env:
          POSTGRES_SERVER: localhost
          POSTGRES_PORT: 5432
          POSTGRES_DB: app
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: passw0rd

      - name: Tear down the Stack
        run: docker compose down -v --remove-orphans

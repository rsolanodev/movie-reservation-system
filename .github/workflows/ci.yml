name: CI

on:
  pull_request:
    branches: ["master"]

  push:
    branches: ["master"]

jobs:
  linter:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python -

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Check mypy
        run: poetry run mypy app

      - name: Check Ruff
        run: poetry run ruff check app

      - name: Check Ruff format
        run: poetry run ruff format app --check

  test:
    runs-on: ubuntu-latest
    services:
      postgres:
        image: postgres:16-alpine
        env:
          POSTGRES_USER: testuser
          POSTGRES_PASSWORD: testpass
          POSTGRES_DB: testdb
        ports:
          - 5432:5432
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Poetry
        run: curl -sSL https://install.python-poetry.org | python -

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: "3.11"
          cache: "poetry"

      - name: Install dependencies
        run: poetry install --no-interaction

      - name: Run the Stack
        run: docker compose up -d db

      - name: Migrate Database
        run: docker compose exec backend alembic upgrade head

      - name: Run Pytest
        run: docker compose exec backend poetry run pytest

      - name: Tear down the Stack
        run: docker compose down -v --remove-orphans

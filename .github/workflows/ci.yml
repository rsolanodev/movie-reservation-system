name: CI

on:
  pull_request:
    branches: ["master"]

  push:
    branches: ["master"]

jobs:
  test:
    runs-on: ubuntu-latest
    env:
      DOMAIN: example.com
      STACK_NAME: myapp
      POSTGRES_PASSWORD: passw0rd
      POSTGRES_USER: postgres
      POSTGRES_DB: app
      SECRET_KEY: secretkey
      ENVIRONMENT: local
      BACKEND_CORS_ORIGINS: "http://localhost,https://localhost"
      POSTGRES_PORT: 5432
      REDIS_URL: redis://redis:6379/0

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Create .env file
        run: |
          echo "DOMAIN=${{ env.DOMAIN }}" >> .env
          echo "STACK_NAME=${{ env.STACK_NAME }}" >> .env
          echo "POSTGRES_PASSWORD=${{ env.POSTGRES_PASSWORD }}" >> .env
          echo "POSTGRES_USER=${{ env.POSTGRES_USER }}" >> .env
          echo "POSTGRES_DB=${{ env.POSTGRES_DB }}" >> .env
          echo "SECRET_KEY=${{ env.SECRET_KEY }}" >> .env
          echo "ENVIRONMENT=${{ env.ENVIRONMENT }}" >> .env
          echo "BACKEND_CORS_ORIGINS=${{ env.BACKEND_CORS_ORIGINS }}" >> .env
          echo "POSTGRES_PORT=${{ env.POSTGRES_PORT }}" >> .env
          echo "REDIS_URL=${{ env.REDIS_URL }}" >> .env

      - name: Build and start services
        run: |
          docker compose build
          docker compose up -d db backend

      - name: Check code quality
        run: |
          docker compose run backend mypy app
          docker compose run backend ruff check app
          docker compose run backend ruff format app --check

      - name: Run tests
        run: docker compose run backend pytest

      - name: Tear down the Stack
        run: docker compose down -v --remove-orphans
